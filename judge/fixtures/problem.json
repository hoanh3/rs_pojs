[
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "fibonacci_sequence",
            "curators": [],
            "date": "2024-11-22T05:00:00Z",
            "description": "The Fibonacci sequence is a famous number sequence in mathematics, often used in coding challenges. Your task is to generate the first ~N~ numbers of the Fibonacci sequence.\n\n## Input Specification\n\nThe input will contain a single integer ~N~ (~1 \\le N \\le 50~), representing how many terms of the Fibonacci sequence you need to generate.\n\n## Output Specification\n\nOutput ~N~ numbers of the Fibonacci sequence, each separated by a space.\n\n## Sample Input\n\n    5\n\n## Sample Output\n\n    0 1 1 2 3",
            "group": 4,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Fibonacci Sequence Generator",
            "og_image": "",
            "partial": true,
            "points": 10.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [5],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 2
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "sum_of_n_numbers",
            "curators": [],
            "date": "2024-11-22T06:00:00Z",
            "description": "Given an integer ~N~, calculate the sum of all integers from 1 to ~N~.\n\n## Input Specification\n\nA single integer ~N~ (~1 \\le N \\le 10^6~).\n\n## Output Specification\n\nOutput a single integer, the sum from 1 to ~N~.\n\n## Sample Input\n\n    5\n\n## Sample Output\n\n    15",
            "group": 1,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Sum of N Numbers",
            "og_image": "",
            "partial": true,
            "points": 5.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [10],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 3
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "max_of_array",
            "curators": [],
            "date": "2024-11-22T07:00:00Z",
            "description": "Find the maximum value in an array of integers.\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 100\\,000~), the number of elements in the array. The next line will contain ~N~ space-separated integers (~-10^9 \\le a_i \\le 10^9~).\n\n## Output Specification\n\nOutput a single integer, the maximum value in the array.\n\n## Sample Input\n\n    5\n    1 2 3 4 5\n\n## Sample Output\n\n    5",
            "group": 2,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Maximum of Array",
            "og_image": "",
            "partial": true,
            "points": 7.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [1],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 4
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "palindrome_checker",
            "curators": [],
            "date": "2024-11-22T08:00:00Z",
            "description": "Check if a given string is a palindrome.\n\n## Input Specification\n\nA single line containing a string ~S~ consisting of lowercase letters only (~1 \\le |S| \\le 1000~).\n\n## Output Specification\n\nOutput ~YES~ if the string is a palindrome, otherwise output ~NO~.\n\n## Sample Input\n\n    racecar\n\n## Sample Output\n\n    YES",
            "group": 5,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Palindrome Checker",
            "og_image": "",
            "partial": true,
            "points": 6.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [3],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 5
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "binary_search",
            "curators": [],
            "date": "2024-11-22T09:00:00Z",
            "description": "Implement a binary search algorithm to determine if a target value exists in a sorted array.\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 100,000~), the number of elements in the array. The next line will contain ~N~ space-separated integers in non-decreasing order. The third line contains an integer ~T~ representing the target value.\n\n## Output Specification\n\nOutput ~YES~ if the target exists in the array, otherwise output ~NO~.\n\n## Sample Input\n\n    5\n    1 3 5 7 9\n    3\n\n## Sample Output\n\n    YES",
            "group": 6,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Binary Search",
            "og_image": "",
            "partial": true,
            "points": 8.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [14],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 6
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "linked_list_cycle",
            "curators": [],
            "date": "2024-11-22T10:00:00Z",
            "description": "Detect if a given singly linked list has a cycle.\n\n## Input Specification\n\nYou will be provided with a singly linked list of integers represented as node values. Your task is to determine if there is a cycle in the linked list.\n\n## Output Specification\n\nOutput ~YES~ if there is a cycle, otherwise output ~NO~.\n\n## Sample Input\n\n    List: 1 -> 2 -> 3 -> 4 -> 5 -> 3 (cycle back to 3)\n\n## Sample Output\n\n    YES",
            "group": 3,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Linked List Cycle",
            "og_image": "",
            "partial": true,
            "points": 10.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 2.0,
            "types": [4],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 7
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "factorial_calculation",
            "curators": [],
            "date": "2024-11-22T11:00:00Z",
            "description": "Calculate the factorial of a given non-negative integer ~N~.\n\n## Input Specification\n\nA single integer ~N~ (~0 \\le N \\le 20~).\n\n## Output Specification\n\nOutput a single integer, the factorial of ~N~.\n\n## Sample Input\n\n    5\n\n## Sample Output\n\n    120",
            "group": 1,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Factorial Calculation",
            "og_image": "",
            "partial": true,
            "points": 7.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [10],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 8
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "gcd_of_two_numbers",
            "curators": [],
            "date": "2024-11-22T12:00:00Z",
            "description": "Find the Greatest Common Divisor (GCD) of two given positive integers.\n\n## Input Specification\n\nTwo space-separated integers ~A~ and ~B~ (~1 \\le A, B \\le 10^6~).\n\n## Output Specification\n\nOutput a single integer, the GCD of ~A~ and ~B~.\n\n## Sample Input\n\n    48 18\n\n## Sample Output\n\n    6",
            "group": 3,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "GCD of Two Numbers",
            "og_image": "",
            "partial": true,
            "points": 8.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [5],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 9
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "reverse_string",
            "curators": [],
            "date": "2024-11-22T13:00:00Z",
            "description": "Given a string, reverse the order of characters.\n\n## Input Specification\n\nA single line containing a string ~S~ (~1 \\le |S| \\le 1000~).\n\n## Output Specification\n\nOutput the reversed string.\n\n## Sample Input\n\n    hello\n\n## Sample Output\n\n    olleh",
            "group": 2,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Reverse String",
            "og_image": "",
            "partial": true,
            "points": 6.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [3],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 10
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "prime_check",
            "curators": [],
            "date": "2024-11-22T14:00:00Z",
            "description": "Determine if a given number is a prime number.\n\n## Input Specification\n\nA single integer ~N~ (~1 \\le N \\le 10^6~).\n\n## Output Specification\n\nOutput ~YES~ if the number is a prime, otherwise output ~NO~.\n\n## Sample Input\n\n    7\n\n## Sample Output\n\n    YES",
            "group": 4,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Prime Number Check",
            "og_image": "",
            "partial": true,
            "points": 8.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 2.0,
            "types": [10],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 11
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "merge_sorted_arrays",
            "curators": [],
            "date": "2024-11-22T15:00:00Z",
            "description": "Given two sorted arrays, merge them into a single sorted array.\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 1000~), the number of elements in the first array. The second line contains ~N~ space-separated integers. The third line will contain an integer ~M~ (~1 \\le M \\le 1000~), the number of elements in the second array. The fourth line contains ~M~ space-separated integers.\n\n## Output Specification\n\nOutput a single line containing the merged sorted array.\n\n## Sample Input\n\n    3\n    1 3 5\n    3\n    2 4 6\n\n## Sample Output\n\n    1 2 3 4 5 6",
            "group": 2,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Merge Sorted Arrays",
            "og_image": "",
            "partial": true,
            "points": 9.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [1],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 12
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "knapsack_problem",
            "curators": [],
            "date": "2024-11-22T16:00:00Z",
            "description": "Solve the 0/1 knapsack problem given a set of weights and values.\n\n## Input Specification\n\nThe first line contains two integers ~N~ and ~W~ (~1 \\le N \\le 100, 1 \\le W \\le 1000~), representing the number of items and the maximum weight capacity. Each of the next ~N~ lines contains two integers ~v_i~ and ~w_i~, the value and weight of each item.\n\n## Output Specification\n\nOutput a single integer, the maximum value that can be obtained.\n\n## Sample Input\n\n    3 50\n    60 10\n    100 20\n    120 30\n\n## Sample Output\n\n    220",
            "group": 6,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "0/1 Knapsack Problem",
            "og_image": "",
            "partial": true,
            "points": 15.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [9],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 13
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "valid_parentheses",
            "curators": [],
            "date": "2024-11-22T17:00:00Z",
            "description": "Given a string of parentheses, check if they are balanced.\n\n## Input Specification\n\nA single string ~S~ (~1 \\le |S| \\le 1000~) containing only characters '(', ')', '{', '}', '[' and ']'.\n\n## Output Specification\n\nOutput ~YES~ if the parentheses are balanced, otherwise output ~NO~.\n\n## Sample Input\n\n    ({[]})\n\n## Sample Output\n\n    YES",
            "group": 1,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Valid Parentheses",
            "og_image": "",
            "partial": true,
            "points": 8.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [7],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 14
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "breadth_first_search",
            "curators": [],
            "date": "2024-11-22T18:00:00Z",
            "description": "Implement Breadth-First Search (BFS) on a given graph to find the shortest path.\n\n## Input Specification\n\nThe first line will contain two integers ~N~ and ~M~ (~1 \\le N \\le 100, 0 \\le M \\le N^2~), representing the number of nodes and edges. Each of the next ~M~ lines will contain two integers representing an edge between two nodes.\n\n## Output Specification\n\nOutput the shortest path from node 1 to node N.\n\n## Sample Input\n\n    4 4\n    1 2\n    1 3\n    2 4\n    3 4\n\n## Sample Output\n\n    1 -> 2 -> 4",
            "group": 5,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Breadth-First Search",
            "og_image": "",
            "partial": true,
            "points": 12.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 2.0,
            "types": [16],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 15
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "find_peak_element",
            "curators": [],
            "date": "2024-11-22T19:00:00Z",
            "description": "Given an array of integers, find a peak element. A peak element is an element that is strictly greater than its neighbors.\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 100,000~), the number of elements in the array. The second line contains ~N~ space-separated integers (~-10^9 \\le a_i \\le 10^9~).\n\n## Output Specification\n\nOutput the index of a peak element. If there are multiple peaks, output any of them.\n\n## Sample Input\n\n    5\n    1 2 3 1 2\n\n## Sample Output\n\n    2",
            "group": 2,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Find Peak Element",
            "og_image": "",
            "partial": true,
            "points": 8.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [1],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 16
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "minimum_coins",
            "curators": [],
            "date": "2024-11-22T20:00:00Z",
            "description": "Given an integer amount, determine the minimum number of coins needed to make up that amount using a given set of coin denominations.\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 10,000~), representing the target amount. The second line contains the denominations of coins available, each an integer (~1 \\le coin \\le 100~).\n\n## Output Specification\n\nOutput the minimum number of coins needed to make up the amount. If it's not possible, output ~-1~.\n\n## Sample Input\n\n    11\n    1 5 10\n\n## Sample Output\n\n    2",
            "group": 4,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Minimum Coins Problem",
            "og_image": "",
            "partial": true,
            "points": 12.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 2.0,
            "types": [11],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 17
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "merge_intervals",
            "curators": [],
            "date": "2024-11-22T21:00:00Z",
            "description": "Given a collection of intervals, merge all overlapping intervals.\n\n## Input Specification\n\nThe first line will contain an integer ~N~ (~1 \\le N \\le 10^4~), the number of intervals. Each of the next ~N~ lines contains two integers ~start~ and ~end~ (~1 \\le start, end \\le 10^6~), representing the start and end of an interval.\n\n## Output Specification\n\nOutput the merged intervals in any order.\n\n## Sample Input\n\n    4\n    1 3\n    2 6\n    8 10\n    15 18\n\n## Sample Output\n\n    1 6\n    8 10\n    15 18",
            "group": 3,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Merge Intervals",
            "og_image": "",
            "partial": true,
            "points": 14.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [5],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 18
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "robot_return_to_origin",
            "curators": [],
            "date": "2024-11-22T22:00:00Z",
            "description": "A robot is initially at (0, 0) and can move up, down, left, or right. Given a sequence of moves, determine if the robot returns to the origin.\n\n## Input Specification\n\nA single line containing a string ~S~ (~1 \\le |S| \\le 10^4~), consisting of the characters 'U', 'D', 'L', 'R', which represent Up, Down, Left, and Right moves respectively.\n\n## Output Specification\n\nOutput ~YES~ if the robot returns to the origin, otherwise output ~NO~.\n\n## Sample Input\n\n    UD\n\n## Sample Output\n\n    YES",
            "group": 5,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Robot Return to Origin",
            "og_image": "",
            "partial": true,
            "points": 10.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 1.0,
            "types": [20],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 19
    },
    {
        "fields": {
            "ac_rate": 0.0,
            "allowed_languages": [3, 4, 5, 6, 2, 7, 1, 8],
            "authors": [1],
            "banned_users": [],
            "code": "number_of_islands",
            "curators": [],
            "date": "2024-11-22T23:00:00Z",
            "description": "Given a 2D grid map of '1's (land) and '0's (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically.\n\n## Input Specification\n\nThe first line will contain two integers ~N~ and ~M~ (~1 \\le N, M \\le 300~), representing the number of rows and columns in the grid. Each of the next ~N~ lines contains ~M~ characters ('1' or '0').\n\n## Output Specification\n\nOutput a single integer, the number of islands.\n\n## Sample Input\n\n    4 5\n    11000\n    11000\n    00100\n    00011\n\n## Sample Output\n\n    3",
            "group": 6,
            "is_manually_managed": false,
            "is_public": true,
            "license": null,
            "memory_limit": 65536,
            "name": "Number of Islands",
            "og_image": "",
            "partial": true,
            "points": 15.0,
            "short_circuit": false,
            "summary": "",
            "testers": [],
            "time_limit": 2.0,
            "types": [12],
            "user_count": 0
        },
        "model": "judge.problem",
        "pk": 20
    }
]
